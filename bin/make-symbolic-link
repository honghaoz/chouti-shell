#!/bin/bash

# TODO: make this a script file.


function makeSymbolicLink() {
  printHelp () {
    echo "$(tput bold)OVERVIEW:$(tput sgr0) Make symbolic link with backup support."
		echo ""
    echo "$(tput bold)USAGE:$(tput sgr0)"
		echo "  make-symbolic-link ${COLOR_GREEN}[symbolic-path]${COLOR_RESET} ${COLOR_GREEN}[destination-path]${COLOR_RESET}"
		echo ""
		echo "$(tput bold)EXAMPLES:$(tput sgr0)"
		echo "  1. make-symbolic-link ${COLOR_GREEN}$HOME/Desktop/Downloads${COLOR_RESET} ${COLOR_GREEN}$HOME/Downloads${COLOR_RESET}"
	}

  if [[ $1 == "--help" || $1 == "-h" ]]
	then
		printHelp
		return 0
	fi

  TARGET_FILE_PATH=$1 # the symbolic link file
  SOURCE_FILE_PATH=$2 # the file to link to, aka destination

  # if source file doesn't exist, skip
  if [[ ! -e "$SOURCE_FILE_PATH" ]]; then
    echo "⚠️  Source file doesn't exist: $SOURCE_FILE_PATH"
    return
  fi

  if [[ -e "$TARGET_FILE_PATH" && ! -L "$TARGET_FILE_PATH" ]]; then
    # is regular file or dir
    BACKUP_PATH=$(rotatedFilePath "$TARGET_FILE_PATH" "-backup")
    echo "Rename '$TARGET_FILE_PATH' to '$BACKUP_PATH'"
    mv "$TARGET_FILE_PATH" "$BACKUP_PATH"
  fi

  SHOULD_CREATE_LINK=true
  if [[ -L "$TARGET_FILE_PATH" ]]; then
    # already have symlink
    LINK_TARGET_PATH=$(readlink -f "$TARGET_FILE_PATH")
    # LINK_TARGET_PATH=$(ls -l $TARGET_FILE_PATH | awk '{print $NF}')
    if [[ $LINK_TARGET_PATH == "$SOURCE_FILE_PATH" ]]; then
      # already linked
      SHOULD_CREATE_LINK=false
    else
      # different link
      BACKUP_PATH=$(rotatedFilePath "$TARGET_FILE_PATH" "-backup")
      echo "Rename '$TARGET_FILE_PATH' to '$BACKUP_PATH'"
      mv "$TARGET_FILE_PATH" "$BACKUP_PATH"
    fi
  fi

  if [[ $SHOULD_CREATE_LINK == true ]]; then
    # create intermediate directories if needed
    if [[ ! -d "$(dirname "$TARGET_FILE_PATH")" ]]; then
      echo "Creating directory: $(dirname "$TARGET_FILE_PATH")"
      mkdir -p "$(dirname "$TARGET_FILE_PATH")" || return
    fi
    # create symlink
    echo "Making symlink: $TARGET_FILE_PATH -> $SOURCE_FILE_PATH"
    ln -s "$SOURCE_FILE_PATH" "$TARGET_FILE_PATH"
  else
    echo "✅ Already linked: ${COLOR_CYAN}$TARGET_FILE_PATH${COLOR_RESET} -> $SOURCE_FILE_PATH"
  fi
}
