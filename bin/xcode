#!/bin/bash

print_help() {
  echo "$(tput bold)OVERVIEW:$(tput sgr0) Xcode commands.

$(tput bold)USAGE:$(tput sgr0) $(basename "$0") <subcommand>

$(tput bold)OPTIONS:$(tput sgr0)

  -h, --help           Display this help message.
  -v, --version        Print the version information.

$(tput bold)SUBCOMMANDS:$(tput sgr0)"
  SCRIPT_DIR="$(dirname "${BASH_SOURCE[0]}")"

  for subcommand_script in "$SCRIPT_DIR"/xcode-subcommands/xcode-*; do
    subcommand=$(basename "$subcommand_script" | sed 's/xcode-//')
    overview=$(grep -m 1 'OVERVIEW=' "$subcommand_script" | cut -d '"' -f 2)
    echo
    echo "  $(tput setaf 2)$subcommand$(tput sgr0)"
    echo "    $overview"
  done

  echo ""
}

print_version() {
  echo "0.1.0"
}

subcommand=""

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
  --help | -h)
    print_help
    exit 0
    ;;
  --version | -v)
    print_version
    exit 0
    ;;
  *)
    subcommand=$key
    shift # past argument
    break
    ;;
  esac
done

if [[ $subcommand == "" ]]; then
  print_help
  exit 1
fi

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

if [[ ! -f "$SCRIPT_DIR/xcode-subcommands/xcode-$subcommand" ]]; then
  echo "ðŸ›‘ Invalid subcommand: $subcommand"
  exit 1
fi

"$SCRIPT_DIR/xcode-subcommands/xcode-$subcommand" "$@"
